{"ast":null,"code":"var _jsxFileName = \"/Users/midhilkari/Desktop/Deakin-Masters-IT/Trimester-3/SIT764-Project_A&D/Weather_Update/Weather_Update/src/App.js\";\nimport React from \"react\";\nimport './App.css';\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './weather-icons/css/weather-icons.css';\nimport Form from './app_component/form.component';\n/*let myHeaders = new Headers();\nconst myInit = {\n  method: 'GET',\n  headers: myHeaders,\n  mode: 'no-cors',\n  cache: 'default'\n};*/\n\nconst API_KEY = '62a01dc6786ac94ea6ffb947cab0d995'; //const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n//const targetUrl  = 'http://samples.openweathermap.org/data/2.5/weather?q=${city},&{country}&appid=${API_KEY}';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      if (city && country) {\n        const api_call = await fetch('http://api.openweathermap.org/data/2.5/find/?q=' + city + ',' + country + '&appid=62a01dc6786ac94ea6ffb947cab0d995');\n        const response = await api_call.json();\n        console.log(response);\n        const iconState = await this.get_weatherIcon(response.list[0].weather[0].id);\n        console.log({\n          iconState\n        });\n        this.setState({\n          city: response.list[0].name + ' ' + response.list[0].sys.country,\n          celsius: this.calCelsius(response.list[0].main.temp),\n          temp_max: this.calCelsius(response.list[0].main.temp_max),\n          temp_min: this.calCelsius(response.list[0].main.temp_min),\n          description: response.list[0].weather[0].description,\n          //icon: this.weatherIcon.Thunderstorm\n          icon: iconState\n        }); //this.get_weatherIcon(this.weatherIcon,response.list[0].weather[0].id);\n        //console.log('weather icon id:',this.weatherIcon,response.list[0].weather[0].id);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    console.log(\"got temp\");\n    let cell = Math.floor(temp - 273.15);\n    console.log(\"converted to celsius\");\n    return cell;\n  }\n\n  get_weatherIcon(rangeId, icon) {\n    console.log(rangeId);\n    console.log(icon);\n\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weatherIcon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weatherIcon.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 532:\n        this.setState({\n          icon: this.weatherIcon.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: this.weatherIcon.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: this.weatherIcon.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n        break;\n\n      case rangeId >= 800 && rangeId <= 804:\n        console.log(rangeId);\n        this.setState({\n          icon: this.weatherIcon.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: this.weatherIcon.Clear\n        });\n    }\n  }\n\n  //state = {};\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Form, {\n      loadweather: this.getWeather,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      weatherIcon: this.state.icon,\n      temp_celsius: this.state.celsius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/midhilkari/Desktop/Deakin-Masters-IT/Trimester-3/SIT764-Project_A&D/Weather_Update/Weather_Update/src/App.js"],"names":["React","Weather","Form","API_KEY","App","Component","constructor","getWeather","e","preventDefault","city","target","elements","value","country","api_call","fetch","response","json","console","log","iconState","get_weatherIcon","list","weather","id","setState","name","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","icon","error","state","undefined","weatherIcon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","rangeId","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './App.css';\nimport Weather from './app_component/weather.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './weather-icons/css/weather-icons.css';\nimport Form from './app_component/form.component';\n\n/*let myHeaders = new Headers();\nconst myInit = {\n  method: 'GET',\n  headers: myHeaders,\n  mode: 'no-cors',\n  cache: 'default'\n};*/\n\n\nconst API_KEY = '62a01dc6786ac94ea6ffb947cab0d995';\n//const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n//const targetUrl  = 'http://samples.openweathermap.org/data/2.5/weather?q=${city},&{country}&appid=${API_KEY}';\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description : \"\",\n      error : false\n    };\n    \n\n    this.weatherIcon={\n\n      Thunderstorm:\"wi-thunderstorm\",\n      Drizzle:\"wi-sleet\",\n      Rain:\"wi-storm-showers\",\n      Snow:\"wi-snow\",\n      Atmosphere:\"wi-fog\",\n      Clear:\"wi-day-sunny\",\n      Clouds:\"wi-day-fog\",\n    };\n  }\n\n  calCelsius(temp){\n    console.log(\"got temp\");\n    let cell = Math.floor(temp - 273.15)\n    console.log(\"converted to celsius\");\n    return cell;\n  }\n\n  get_weatherIcon(rangeId,icon){\n    console.log(rangeId);\n    console.log(icon);\n    switch(true){\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon:this.weatherIcon.Thunderstorm});\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon:this.weatherIcon.Drizzle});\n        break;\n      case rangeId >= 500 && rangeId <= 532:\n        this.setState({icon:this.weatherIcon.Rain});\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({icon:this.weatherIcon.Snow});\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({icon:this.weatherIcon.Atmosphere});\n        break;\n      case rangeId === 800:\n        this.setState({icon:this.weatherIcon.Clear});\n        break;\n      case rangeId >= 800 && rangeId <= 804:\n        console.log(rangeId);\n        this.setState({icon:this.weatherIcon.Clouds});\n        break;\n      default:\n        this.setState({icon:this.weatherIcon.Clear});\n    }\n  }\n\n  \n  getWeather = async(e)=>{\n\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    if(city && country){\n      const api_call = await fetch('http://api.openweathermap.org/data/2.5/find/?q='+city+','+country+'&appid=62a01dc6786ac94ea6ffb947cab0d995');\n\n      const response = await api_call.json();\n      console.log(response);\n      \n      const iconState = await this.get_weatherIcon(response.list[0].weather[0].id);\n      console.log({iconState})\n      this.setState({\n        city:response.list[0].name + ' '+response.list[0].sys.country,\n        celsius: this.calCelsius(response.list[0].main.temp),\n        temp_max: this.calCelsius(response.list[0].main.temp_max),\n        temp_min: this.calCelsius(response.list[0].main.temp_min),\n        description: response.list[0].weather[0].description,\n        //icon: this.weatherIcon.Thunderstorm\n        icon: iconState\n      });\n      //this.get_weatherIcon(this.weatherIcon,response.list[0].weather[0].id);\n      //console.log('weather icon id:',this.weatherIcon,response.list[0].weather[0].id);\n    }else{\n      this.setState({error:true});\n    }\n    \n  }\n\n\n  //state = {};\n  render(){\n    return(\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error}/>\n        <Weather \n        city={this.state.city} \n        country={this.state.country}\n        weatherIcon= {this.state.icon}\n        temp_celsius={this.state.celsius}\n        temp_max={this.state.temp_max}\n        temp_min={this.state.temp_min}\n        description={this.state.description}\n        \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}